{"version":3,"sources":["index.js"],"names":["Header","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","className","DirectoryView","props","SearchForm","searchVal","handleChange","selectRecipes","recipeList","map","recipe","RecipeCard","name","clickHandler","key","value","onChange","onClick","DetailView","ingredients","instructions","App","state","selectedRecipes","event","_this","setState","target","preventDefault","recipearray","filter","includes","selectARecipe","find","console","log","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cfdd373.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Header = () => (\n    <div id=\"header\"><i className=\"fas fa-utensils\"></i>Recipe App</div>\n)\n\nconst DirectoryView = (props) => (\n    <div id=\"directory\">\n        <SearchForm \n            searchVal={props.searchVal} \n            handleChange={props.handleChange}\n            selectRecipes={props.selectRecipes}\n        />\n        {props.recipeList.map(recipe => <RecipeCard name={recipe.name} clickHandler={props.clickHandler} id={recipe.id} key={recipe.id}/>)}\n    </div>\n)\n\nconst SearchForm = (props) => (\n    <div>\n        <form>\n            <input value={props.searchVal} onChange={props.handleChange} />\n            <button onClick={props.selectRecipes}>Search</button>\n        </form>\n    </div>\n)\nconst RecipeCard = (props) => (\n    <div>\n        <h3 onClick={()=> props.clickHandler(props.id)}>{props.name}</h3>\n    </div>\n)\n\nconst DetailView = (props) => (\n   \n    <div id=\"details\"> \n        \n        <p>{props.recipe.name}</p>\n        <p>{props.ingredients}</p>\n        <p>{props.recipe.instructions}</p>\n\n    </div>\n    \n)\n\nclass App extends React.Component{\n    state = {\n\n        recipeList:[\n            {\n            id: 1,\n            name: 'turkey + stuff',\n            ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n            instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n            },\n            {\n            id: 2,\n            name: 'turkey salad',\n            ingredients: ['turkey', 'mayonnaise', 'pickles', 'celery', 'potato'],\n            instructions: ['chop leftover turkey til fine', 'mix mayonnaise', 'add additional ingredients']\n            },\n            {\n            id: 3,\n            name: 'turkey bacon',\n            ingredients: ['turkey bacon', 'oil'],\n            instructions: ['pre-heat pan', 'add oil to pan', 'fry bacon for 2 minutes on each side']\n            },\n            {\n            id: 4,\n            name: 'white rice',\n            ingredients: ['1 cup white rice', '1 cup water'],\n            instructions: ['bring water to boil', 'add rice', 'cover', 'turn off heat']\n            },\n            {\n            id: 5,\n            name: 'yellow rice',\n            ingredients: ['1 cup yellow rice', '1 cup water'],\n            instructions: ['bring water to boil', 'add rice', 'cover', 'turn off heat']\n            },\n            {\n            id: 6,\n            name: 'dirty rice',\n            ingredients: ['1 cup white rice', '1 cup water', 'dirt'],\n            instructions: ['bring water to boil', 'add rice', 'add dirt', 'cover', 'turn off heat']\n            },\n            {\n            id: 7,\n            name: 'mashed potatoes',\n            ingredients: ['potatoes', 'milk', 'butter'],\n            instructions: ['Peel and cut potatoes', 'boil until tender', 'drain', 'add milk and butter', 'mash']\n            },\n            {\n            id: 8,\n            name: 'roasted potatoes',\n            ingredients: ['potatoes', 'minced garlic', 'olive oil', 'celery', 'potato'],\n            instructions: ['pre-heat oven to 350', 'cut potatoes with skin on', 'mix in olive oil and garic', 'bake']\n            },\n            {\n            id: 9,\n            name: 'chicken tenders',\n            ingredients: ['chicken breast', 'flour', 'oil', 'egg', 'milk'],\n            instructions: ['pre-heat oil to 350', 'mix milk and egg', 'cut breast to tenders', 'flour', 'dip', 'flour', 'fry']\n            },\n            {\n            id: 10,\n            name: 'cheeseburger',\n            ingredients: ['ground beef', 'pea and perrins', 'cheese'],\n            instructions: ['mix and pat meat to size', 'fry in pan', 'add cheese']\n            },\n\n        ],\n        searchVal: '',\n        selectedRecipes: [],\n        recipe: {}\n    }\n\n        handleChange = (event) => {\n           this.setState({ searchVal: event.target.value})\n        }\n       \n        selectRecipes = (event) =>  {\n            event.preventDefault();\n            const recipearray  = this.state.recipeList.filter(recipe => recipe.name.includes(this.state.searchVal))\n                this.setState({ selectedRecipes: recipearray, recipe: recipearray[0]})\n            }\n        selectARecipe = (id) => {\n            \n            this.setState({ recipe: this.state.selectedRecipes.find(recipe => recipe.id === id) })\n            console.log(this.state.recipe.ingredients);\n        }\n\n    render(){\n     \n        return(\n            <div id=\"container\">\n\n                <Header\n                />\n                <DirectoryView \n                    recipeList={this.state.selectedRecipes}\n                    handleChange={this.handleChange}\n                    searchVal={this.state.searchVal}\n                    selectRecipes={this.selectRecipes}\n                    clickHandler={this.selectARecipe}\n                />\n                <DetailView\n                    recipe={this.state.recipe}\n                    ingredients={this.state.recipe.ingredients}\n                  \n                />\n            </div>\n            \n        )\n    }\n\n\n}\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}